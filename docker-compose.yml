version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: smart-dj-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=smart-dj
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - smart-dj-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smart-dj-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - smart-dj-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart-dj-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/smart-dj?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - JWT_SECRET=your_super_secret_jwt_key_here
      - SESSION_SECRET=your_session_secret_here
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    networks:
      - smart-dj-network

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart-dj-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - REACT_APP_WS_URL=ws://localhost:3001
    depends_on:
      - backend
    networks:
      - smart-dj-network

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: smart-dj-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - smart-dj-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  smart-dj-network:
    driver: bridge